---
# Requires: Ansible 2.4 (due to autoremove=yes)
# Usage:
#   1) install/update ansible
#   2) adjust and run the playbook
#   3) set password for the new user
- hosts: localhost
  become: true
  vars:
    create_user: false
    console_keymap: fi
    console_font: eurlatgr
    system_locale: en_US.UTF-8
    system_timezone: Europe/Helsinki
    root_shell: /bin/zsh
    user_uid: 1000
    user_name: mm
    user_group: users
    user_shell: /bin/zsh
    workstation: false
  tasks:
    - name: Check target system
      raw: rpm -q python2 python2-dnf python2-libselinux
      check_mode: no
      register: basics
      changed_when: false
      ignore_errors: true

    - name: Prepare target system
      raw: dnf -y install python2 python2-dnf python2-libselinux
      when: basics is failed

    - name: Detect boot parameters
      command: grep -q rhgb /etc/default/grub
      register: adjust_boot_parameters
      failed_when: false
      changed_when: false

    - name: Adjust boot parameters
      command: grubby --remove-args "rhgb LANG" --args="quiet systemd.show_status=yes" --update-kernel=ALL
      when: adjust_boot_parameters.rc == 0

    - name: Finalize boot parameters, part I
      replace: dest=/etc/default/grub regexp=' rhgb' replace=''
      when: adjust_boot_parameters.rc == 0

    - name: Finalize boot parameters, part II
      replace: dest=/etc/default/grub regexp='(^GRUB_CMDLINE_LINUX=.*)"$' replace='\1 systemd.show_status=yes"'
      when: adjust_boot_parameters.rc == 0

    - name: Remove rescue images
      file: path={{ item }} state=absent
      with_fileglob: /boot/*rescue*
      register: rescue_images

    - name: Check GRUB configuration path
      stat: path=/boot/efi/EFI/fedora/grub.cfg
      register: efi_grub
      failed_when: false
      changed_when: false

    - name: Set GRUB configuration path
      set_fact:
        boot_config: "{{ '/boot/efi/EFI/fedora/grub.cfg' if (efi_grub.stat.isreg is defined and efi_grub.stat.isreg) else '/boot/grub2/grub.cfg' }}"
      failed_when: false
      changed_when: false

    - name: Update GRUB configuration
      command: grub2-mkconfig -o {{ boot_config }}
      when: rescue_images is changed

    - name: Configure console
      copy:
        dest: /etc/vconsole.conf
        content: |
          KEYMAP="{{ console_keymap }}"
          FONT="{{ console_font }}"

    - name: Configure locale
      copy:
        dest: /etc/locale.conf
        content: |
          LANG="{{ system_locale }}"

    - name: Set timezone
      timezone: name="{{ system_timezone }}"

    - name: Check RPM Fusion repository
      command: rpm -q rpmfusion-free-release-{{ ansible_distribution_version }} rpmfusion-nonfree-release-{{ ansible_distribution_version }} warn=no
      register: fusion_enabled
      changed_when: false
      failed_when: false
      when: workstation

    - name: Enable RPM Fusion repository
      package: name={{ item }} state=installed
      with_items:
        - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm
        - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm
      when: workstation and fusion_enabled.rc != 0

    - name: Remove unhelpful packages
      dnf: name={{ item }} state=absent autoremove=yes
      with_items:
        - NetworkManager-adsl
        - NetworkManager-openconnect
        - NetworkManager-openvpn
        - NetworkManager-pptp
        - NetworkManager-team
        - NetworkManager-vpnc
        - NetworkManager-wwan
        - 'PackageKit*'
        - 'abrt*'
        - anaconda
        - 'b43*'
        - dracut-config-rescue
        - dracut-live
        - evolution
        - 'foomatic*'
        - gnome-getting-started-docs
        - gnome-online-miners
        - gnome-user-docs
        - 'gutenprint*'
        - '*hangul*'
        - hplip
        - 'java*'
        - kernel-modules-extra
        - '*kkc*'
        - '*libreoffice*'
        - orca
        - ostree
        - pam_krb5
        - perl-Mozilla-CA
        - '*pinyin*'
        - realmd
        - teamd
        - '*zhuyin*'

    # https://github.com/ansible/ansible/issues/27744
    - name: Remove unhelpful packages (#27744 wildcard issue workaround)
      raw: dnf remove -y 'PackageKit*' 'abrt*' 'b43*' 'foomatic*' 'gutenprint*' '*hangul*' 'java*' '*kkc*' '*libreoffice*' '*pinyin*' '*zhuyin*'
      register: dnf_cmd
      failed_when: false
      changed_when: dnf_cmd.rc == 0

    - name: Install helpful packages (common)
      package: name={{ item }} state=installed
      with_items:
        - bash-completion
        - bind-utils
        - bzip2
        - deltarpm
        - gpm
        - iotop
        - keychain
        - ltrace
        - man-pages
        - mlocate
        - nano
        - net-tools
        - pcp-doc
        - pcp-system-tools
        - psmisc
        - python2-policycoreutils
        - screen
        - strace
        - tcpdump
        - telnet
        - unzip
        - util-linux-user
        - wget
        - zsh

    - name: Install helpful packages (workstation)
      package: name={{ item }} state=installed
      with_items:
        - ImageMagick
        - akmod-wl
        - dconf-editor
        - ffmpeg
        - fuse-sshfs
        - gconf-editor
        - git
        - gnome-tweaks
        - gstreamer1-libav
        - gstreamer1-plugins-good-gtk
        - libnm-gtk
        - ntfsprogs
        - patch
        - powertop
        - seahorse
        - totem
        - totem-nautilus
        - vlc
        - wodim
        - x264
        - yle-dl
        - youtube-dl
      when: workstation

    - name: Update all packages
      package: name=* state=latest

    - name: Disable unhelpful services
      service: name={{ item }} enabled=no
      with_items:
        - bluetooth
        - cups
        - dmraid-activation
        - iscsi
        - lvm2-monitor
        - mcelog
        - mdmonitor
        - multipathd
        - pmie
      failed_when: false

    - name: Enable helpful services
      service: name={{ item }} enabled=yes state=started
      with_items:
        - gpm
        - pmcd

    - name: Change root shell
      user: name=root shell={{ root_shell }}

    - name: Disable pulseaudio for root
      command: systemctl --user mask pulseaudio.service pulseaudio.socket
      register: systemctl_output
      changed_when: "'Created symlink' in systemctl_output.stderr"

    - name: Create user
      user:
        name: "{{ user_name }}"
        shell: "{{ user_shell }}"
        group: "{{ user_group }}"
        uid: "{{ user_uid }}"
      when: create_user

    - name: Disable tracker for the user, part I
      file:
        owner: "{{ user_name }}"
        group: "{{ user_group }}"
        mode: 0755
        path: "/home/{{ user_name }}/.config/systemd/user"
        state: directory
      when: create_user

    - name: Disable tracker for the user, part II
      file:
        owner: "{{ user_name }}"
        group: "{{ user_group }}"
        mode: 0777
        src: /dev/null
        dest: "/home/{{ user_name }}/.config/systemd/user/{{ item }}"
        state: link
      with_items:
        - tracker-extract.service
        - tracker-miner-apps.service
        - tracker-miner-fs.service
        - tracker-miner-rss.service
        - tracker-store.service
        - tracker-writeback.service
      when: create_user

    - name: Configure sudoers
      lineinfile:
        create: true
        dest: /etc/sudoers.d/{{ user_name }}
        line: '{{ user_name }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      when: create_user

    - name: Create Windows partition mount point
      file: path=/mnt/c state=directory
      when: workstation

    # Needs to be adjusted and enabled manually
    - name: Create Windows mount point fstab entry
      lineinfile:
        dest: /etc/fstab
        line: "#/dev/sda5 /mnt/c ntfs noauto,ro,uid={{ user_uid }},nls=utf8,comment=systemd.automount 1 2"
      when: workstation

    - name: Block unwanted user monitoring
      lineinfile:
        dest: /etc/hosts
        line: 127.0.0.2 musicbrainz.org
      when: workstation

    - name: Cleaning up
      file: path={{ item }} state=absent
      with_items:
        - /1
        - /root/.config/pulse
        - /root/.esd_auth
        - /root/.lesshst
        - /root/.local/share/ibus-typing-booster
        - /root/.rnd
        - /root/anaconda-ks.cfg
        - /root/setup.retry
        - /var/cache/PackageKit
        - /var/lib/abrt
        - /var/spool/abrt
        - /var/tmp/abrt
